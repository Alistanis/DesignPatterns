var search_data = {"index":{"searchIndex":["abstractinterface","cio","object","pthreads","patterns","abstractinterface","interfacenotimplemented","methods","addchildtoleaferror","admin","bridge","chainnode","chainofresponsibility","command","commandlist","composite","copyfile","createfile","deletefile","doctor","doctors","footballplayer","gamemanager","generalpractitioner","illness","kicker","leaf","logger","monster","monsternotfound","monsterprototypes","monstertype","node","observer","oncologist","patient","pediatrician","player","prototype","quarterback","removechildfromleaferror","runningback","singleton","subject","surgeon","typeobject","unsupportedtype","user","vector2d","string","<<()","[]()","[]=()","add()","add()","add_command()","add_commands()","add_observer()","api_not_implemented()","attack()","change_password()","clone_type()","colorize()","deep_clone()","description()","description()","description()","description()","description()","display()","display()","error()","execute()","execute()","execute()","execute()","execute()","execute_next()","get_player_position()","get_world()","get_world_size()","get_world_string()","green()","has_illness?()","has_prototype?()","health()","included()","info()","init_world()","kick_ball()","kick_ball()","kick_ball()","kick_ball()","last_description()","last_status()","leaf?()","light_colorize()","log_world()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_description()","next_status()","notify()","notify()","on_notify()","populate_prototype_data()","populate_type_data()","position()","position()","position()","position()","print_world()","process()","process()","prototype_name()","pthreads()","range()","read_file()","red()","remove()","remove()","remove_observer()","resistances()","run_ball()","run_ball()","run_ball()","run_ball()","salary()","salary()","salary()","salary()","saw_patient?()","see_patient()","see_patient()","see_patient()","see_patient()","see_patient()","see_patient()","send_up_chain()","set_illness()","status()","throw_ball()","throw_ball()","throw_ball()","to_h()","undo()","undo()","undo()","undo()","undo()","undo_last()","weaknesses()","write_new_file()","gemfile","gemfile.lock","license","patterns.gemspec","readme","rakefile","game_log.log","dragon.json","high_dragon.json","orc.json","orc_wizard.json","object.html","patterns.html","admin.html","command.html","commandlist.html","copyfile.html","createfile.html","deletefile.html","gamemanager.html","logger.html","observer.html","player.html","singleton.html","subject.html","user.html","vector2d.html","string.html","index.html","application.css","bootstrap.min.css","coderay.css","gemfile.html","gemfile_lock.html","license_txt.html","patterns_gemspec.html","readme_md.html","rakefile.html","command_list_rb.html","command_rb.html","copy_file_rb.html","create_file_rb.html","delete_file_rb.html","admin_rb.html","observer_rb.html","subject_rb.html","user_rb.html","game_manager_rb.html","game_log_log.html","logger_rb.html","player_rb.html","singleton_rb.html","index.html","version_rb.html","patterns_rb.html","run_tests_rb.html","command_spec_rb.html","observer_spec_rb.html","singleton_spec_rb.html","application.js","bootstrap.min.js","index.js","jquery.js","index.html","makefile","makefile","bridge_spec.log","chain_of_responsibility_spec.log","command_spec.log","composite_spec.log","observer_spec.log","singleton_spec.log","type_object_spec.log"],"longSearchIndex":["abstractinterface","cio","object","pthreads","patterns","patterns::abstractinterface","patterns::abstractinterface::interfacenotimplemented","patterns::abstractinterface::methods","patterns::addchildtoleaferror","patterns::admin","patterns::bridge","patterns::chainnode","patterns::chainofresponsibility","patterns::command","patterns::commandlist","patterns::composite","patterns::copyfile","patterns::createfile","patterns::deletefile","patterns::doctor","patterns::doctors","patterns::footballplayer","patterns::gamemanager","patterns::generalpractitioner","patterns::illness","patterns::kicker","patterns::leaf","patterns::logger","patterns::monster","patterns::monsternotfound","patterns::monsterprototypes","patterns::monstertype","patterns::node","patterns::observer","patterns::oncologist","patterns::patient","patterns::pediatrician","patterns::player","patterns::prototype","patterns::quarterback","patterns::removechildfromleaferror","patterns::runningback","patterns::singleton","patterns::subject","patterns::surgeon","patterns::typeobject","patterns::unsupportedtype","patterns::user","patterns::vector2d","string","patterns::node#<<()","patterns::node#[]()","patterns::node#[]=()","patterns::leaf#add()","patterns::node#add()","patterns::commandlist#add_command()","patterns::commandlist#add_commands()","patterns::subject#add_observer()","patterns::abstractinterface::methods#api_not_implemented()","patterns::monster#attack()","patterns::user#change_password()","patterns::monsterprototypes#clone_type()","string#colorize()","patterns::monster#deep_clone()","patterns::commandlist#description()","patterns::generalpractitioner#description()","patterns::oncologist#description()","patterns::pediatrician#description()","patterns::surgeon#description()","patterns::composite#display()","patterns::leaf#display()","patterns::logger#error()","patterns::command#execute()","patterns::commandlist#execute()","patterns::copyfile#execute()","patterns::createfile#execute()","patterns::deletefile#execute()","patterns::commandlist#execute_next()","patterns::gamemanager#get_player_position()","patterns::gamemanager#get_world()","patterns::gamemanager#get_world_size()","patterns::gamemanager#get_world_string()","string#green()","patterns::patient#has_illness?()","patterns::monstertype#has_prototype?()","patterns::monster#health()","patterns::abstractinterface::included()","patterns::logger#info()","patterns::gamemanager#init_world()","patterns::footballplayer#kick_ball()","patterns::kicker#kick_ball()","patterns::quarterback#kick_ball()","patterns::runningback#kick_ball()","patterns::commandlist#last_description()","patterns::commandlist#last_status()","patterns::node#leaf?()","string#light_colorize()","patterns::gamemanager#log_world()","patterns::admin::new()","patterns::chainnode::new()","patterns::command::new()","patterns::commandlist::new()","patterns::composite::new()","patterns::copyfile::new()","patterns::createfile::new()","patterns::deletefile::new()","patterns::doctor::new()","patterns::doctors::new()","patterns::footballplayer::new()","patterns::kicker::new()","patterns::leaf::new()","patterns::logger::new()","patterns::monster::new()","patterns::monsterprototypes::new()","patterns::monstertype::new()","patterns::node::new()","patterns::observer::new()","patterns::patient::new()","patterns::player::new()","patterns::quarterback::new()","patterns::runningback::new()","patterns::subject::new()","patterns::user::new()","patterns::vector2d::new()","patterns::commandlist#next_description()","patterns::commandlist#next_status()","patterns::subject#notify()","patterns::user#notify()","patterns::observer#on_notify()","patterns::monstertype#populate_prototype_data()","patterns::monstertype#populate_type_data()","patterns::footballplayer#position()","patterns::kicker#position()","patterns::quarterback#position()","patterns::runningback#position()","patterns::gamemanager#print_world()","patterns::chainnode#process()","patterns::doctor#process()","patterns::monster#prototype_name()","pthreads#pthreads()","patterns::monster#range()","cio#read_file()","string#red()","patterns::leaf#remove()","patterns::node#remove()","patterns::subject#remove_observer()","patterns::monster#resistances()","patterns::footballplayer#run_ball()","patterns::kicker#run_ball()","patterns::quarterback#run_ball()","patterns::runningback#run_ball()","patterns::footballplayer#salary()","patterns::kicker#salary()","patterns::quarterback#salary()","patterns::runningback#salary()","patterns::doctor#saw_patient?()","patterns::doctor#see_patient()","patterns::doctors#see_patient()","patterns::generalpractitioner#see_patient()","patterns::oncologist#see_patient()","patterns::pediatrician#see_patient()","patterns::surgeon#see_patient()","patterns::chainnode#send_up_chain()","patterns::patient#set_illness()","patterns::commandlist#status()","patterns::footballplayer#throw_ball()","patterns::kicker#throw_ball()","patterns::quarterback#throw_ball()","patterns#to_h()","patterns::command#undo()","patterns::commandlist#undo()","patterns::copyfile#undo()","patterns::createfile#undo()","patterns::deletefile#undo()","patterns::commandlist#undo_last()","patterns::monster#weaknesses()","cio#write_new_file()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["AbstractInterface","","AbstractInterface.html","",""],["CIO","","CIO.html","","<p>For documentation - C library that stands either for C Input/Output or\nCooplib Input/Output. Contains …\n"],["Object","","Object.html","",""],["PThreads","","PThreads.html","","<p>For documentation - A C extension that leverages PThreads instead of ruby\nthreads in order to maximize …\n"],["Patterns","","Patterns.html","","<p>The Patterns module. alistanis.github.io/DesignPatterns/\n"],["Patterns::AbstractInterface","","Patterns/AbstractInterface.html","","<p>Module that defines behavior for raising an exception if a class is\nexpected to implement a function …\n"],["Patterns::AbstractInterface::InterfaceNotImplemented","","Patterns/AbstractInterface/InterfaceNotImplemented.html","","<p>InterfaceNotImplemented error class\n"],["Patterns::AbstractInterface::Methods","","Patterns/AbstractInterface/Methods.html","","<p>Specifies the api_not_implemented method\n"],["Patterns::AddChildToLeafError","","Patterns/AddChildToLeafError.html","","<p>Represents an AddChildToLeafError so that specific error can be raised\n"],["Patterns::Admin","","Patterns/Admin.html","","<p>Admin -&gt; Observer\n<p>An example class to show how the observer pattern can be practically\napplied This …\n"],["Patterns::Bridge","","Patterns/Bridge.html","","<p>Bridge\n<p>Here for documentation purposes only\n<p>Bridge -&gt; Object\n"],["Patterns::ChainNode","","Patterns/ChainNode.html","","<p>ChainNode -&gt; Object\n<p>Will likely be refactored to be more abstract, currently this class has a\nreliance …\n"],["Patterns::ChainOfResponsibility","","Patterns/ChainOfResponsibility.html","","<p>ChainOfResponsibility -&gt; Object\n<p>Here for documentation only TODO: Write the rest of the documentation …\n"],["Patterns::Command","","Patterns/Command.html","","<p>Command -&gt; Object\n<p>Base Class that acts as a receiver and allows execution for a command while\nalso …\n"],["Patterns::CommandList","","Patterns/CommandList.html","","<p>CommandList -&gt; Patterns::Command\n<p>Class that stores a list of commands and provides a way to add and …\n"],["Patterns::Composite","","Patterns/Composite.html","","<p>Composite -&gt; Node\n<p>Acts as a root or branch for a composite structure\n"],["Patterns::CopyFile","","Patterns/CopyFile.html","","<p>CopyFile -&gt; Command\n<p>Class that implements a command to Copy a file from one location to\nanother, and …\n"],["Patterns::CreateFile","","Patterns/CreateFile.html","","<p>CreateFile -&gt; Command\n<p>Creates a file and writes data to it, and provides a command for undoing\nthat …\n"],["Patterns::DeleteFile","","Patterns/DeleteFile.html","","<p>DeleteFile -&gt; Command\n<p>Deletes a file, and provides the ability to undo that operation\n"],["Patterns::Doctor","","Patterns/Doctor.html","","<p>Doctor -&gt; ChainNode\n<p>Doctor class that contains shared functions for all Doctor child classes\n"],["Patterns::Doctors","","Patterns/Doctors.html","","<p>Doctors -&gt; Object\n<p>Acts as a single object containing multiple other objects that it manages.\n(This …\n"],["Patterns::FootballPlayer","","Patterns/FootballPlayer.html","","<p>FootballPlayer -&gt; Object\n<p>Modules: Patterns::AbstractInterface\n<p>An interface class that represents a football …\n"],["Patterns::GameManager","","Patterns/GameManager.html","","<p>GameManager -&gt; Object\n<p>A different type of singleton that acts as a global constant object.\nMethods …\n"],["Patterns::GeneralPractitioner","","Patterns/GeneralPractitioner.html","","<p>GeneralPractitioner -&gt; Doctor\n<p>General practitioner object - Can handle adults (or children) with a …\n"],["Patterns::Illness","","Patterns/Illness.html","","<p>Contains CONST declarations for illnesses mapped to integers in the style\nof an Enum\n"],["Patterns::Kicker","","Patterns/Kicker.html","","<p>Kicker -&gt; FootballPlayer\n<p>Overrides required methods from the FootballPlayer class\n"],["Patterns::Leaf","","Patterns/Leaf.html","","<p>Leaf -&gt; Node\n<p>Acts as a leaf branch to a Composite structure; as a leaf, it may not have\nchildren\n"],["Patterns::Logger","","Patterns/Logger.html","","<p>Logger -&gt; Object\n<p>The standard singleton pattern example - a logger to handle writing to a\nlog file. …\n"],["Patterns::Monster","","Patterns/Monster.html","","<p>Monster -&gt; Object\n<p>The monster class. It delegates its calls to the monster type class. This\nis an example …\n"],["Patterns::MonsterNotFound","","Patterns/MonsterNotFound.html","","<p>MonsterNotFound -&gt; StandardError\n<p>Raises a MonsterNotFound exception when the monster json file doesn&#39;t …\n"],["Patterns::MonsterPrototypes","","Patterns/MonsterPrototypes.html","","<p>MonsterPrototypes -&gt; Object\n<p>This class allows for the copying of any monster class to quickly create …\n"],["Patterns::MonsterType","","Patterns/MonsterType.html","","<p>MonsterType -&gt; Object\n<p>A type object that uses prototype data for a monster if it exists, or uses\nthe …\n"],["Patterns::Node","","Patterns/Node.html","","<p>Admittedly, this was taken from Nick Slocum&#39;s very Ruby and very\nbrilliant solution to the composite …\n"],["Patterns::Observer","","Patterns/Observer.html","","<p>Observer -&gt; Object\n<p>An Observer class that receives notifications about events from subjects it\nis observing. …\n"],["Patterns::Oncologist","","Patterns/Oncologist.html","","<p>Oncologist -&gt; Doctor\n"],["Patterns::Patient","","Patterns/Patient.html","","<p>Patient -&gt; Object\n"],["Patterns::Pediatrician","","Patterns/Pediatrician.html","","<p>Pediatrician -&gt; Doctor\n"],["Patterns::Player","","Patterns/Player.html","","<p>Player -&gt; Object\n<p>A quick data representation of a player&#39;s position\n"],["Patterns::Prototype","","Patterns/Prototype.html","","<p>Prototype\n<p>This class only exists for documentation purposes\n<p>Implementation:\n"],["Patterns::Quarterback","","Patterns/Quarterback.html","","<p>Quarterback -&gt; FootballPlayer\n<p>Overrides required methods from the FootballPlayer class\n"],["Patterns::RemoveChildFromLeafError","","Patterns/RemoveChildFromLeafError.html","","<p>Represents a RemoveChildFromLeafError so that specific error can be raised\n"],["Patterns::Runningback","","Patterns/Runningback.html","","<p>Runningback -&gt; FootballPlayer\n<p>Overrides required methods from the FootballPlayer class\n"],["Patterns::Singleton","","Patterns/Singleton.html","","<p>Singleton\n<p>This class only exists for documentation purposes\n<p>Implementations:\n"],["Patterns::Subject","","Patterns/Subject.html","","<p>Subject -&gt; Object\n<p>The object that will be observed.\n<p>Contains a list of observers that are watching this …\n"],["Patterns::Surgeon","","Patterns/Surgeon.html","","<p>Surgeon -&gt; Doctor\n<p>Surgeon object - can handle internal bleeding\n"],["Patterns::TypeObject","","Patterns/TypeObject.html","","<p>TypeObject\n<p>This class only exists for documentation purposes\n<p>Implementations:\n"],["Patterns::UnsupportedType","","Patterns/UnsupportedType.html","","<p>UnsupportedType -&gt; StandardError\n<p>Raises an UnsupportedType exception when the argument passed in is …\n"],["Patterns::User","","Patterns/User.html","","<p>User -&gt; Subject\n<p>An example class to show how the Subject functions in the Observer pattern\nThis model …\n"],["Patterns::Vector2D","","Patterns/Vector2D.html","","<p>Vector2D -&gt; Object\n<p>A quick data representation of a location in 2D space\n"],["String","","String.html","","<p>Extends the String class\n"],["<<","Patterns::Node","Patterns/Node.html#method-i-3C-3C","(node)","<p>Aliases the add method to &#39;&lt;&lt;&#39; allowing &lt;&lt; to also set\nthe child node&#39;s parent …\n"],["[]","Patterns::Node","Patterns/Node.html#method-i-5B-5D","(index)","<p>Crazy ruby assignment trick that returns the child at the index it is\nassigned\n"],["[]=","Patterns::Node","Patterns/Node.html#method-i-5B-5D-3D","(index, node)","<p>Another crazy ruby assignment trick which allows a node to be replaced upon\nassignment while also marking …\n"],["add","Patterns::Leaf","Patterns/Leaf.html#method-i-add","(component)","<p>Raises an error, since a leaf may not have a child node\n"],["add","Patterns::Node","Patterns/Node.html#method-i-add","(node)","<p>Adds a child node to this node&#39;s list of children\n"],["add_command","Patterns::CommandList","Patterns/CommandList.html#method-i-add_command","(cmd)","<p>public: Adds a command to the list\n<p><code>cmd</code> - The command to be added to the list\n\n<p>Examples\n"],["add_commands","Patterns::CommandList","Patterns/CommandList.html#method-i-add_commands","(cmds)","<p>public: Adds a list of commands to the list\n<p><code>cmds</code> - The list of commands to add to the command list\n\n<p>Examples …\n"],["add_observer","Patterns::Subject","Patterns/Subject.html#method-i-add_observer","(observer)","<p>Adds an observer to the list of observers\n<p><code>observer</code> - The observer to add to the list\n\n<p>Examples\n"],["api_not_implemented","Patterns::AbstractInterface::Methods","Patterns/AbstractInterface/Methods.html#method-i-api_not_implemented","(klass)","<p>Raises an InterfaceNotImplemented exception if the class does not implement\nthe function it is calling …\n"],["attack","Patterns::Monster","Patterns/Monster.html#method-i-attack","()","<p>Delegates getting monster attack to the monster_type\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">orc</span>.<span class=\"ruby-identifier\">attack</span>\n</pre>\n"],["change_password","Patterns::User","Patterns/User.html#method-i-change_password","(new_password)","<p>Changes a user password and notifies all of its observers\n<p><code>new_password</code> - The new password to change the …\n\n"],["clone_type","Patterns::MonsterPrototypes","Patterns/MonsterPrototypes.html#method-i-clone_type","(type_name)","<p>Performs a marshalling of the Monster stored in the Prototype array, which\nis returned as a new Monster …\n"],["colorize","String","String.html#method-i-colorize","(color_code)","<p>Wraps the ansi standard color code around a string\n"],["deep_clone","Patterns::Monster","Patterns/Monster.html#method-i-deep_clone","()","<p>Performs a deep clone of the Monster Object by utilizing the MonsterType\nobject\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">orc2</span> = <span class=\"ruby-identifier\">orc</span>.<span class=\"ruby-identifier\">clone</span>\n</pre>\n"],["description","Patterns::CommandList","Patterns/CommandList.html#method-i-description","()","<p>public: Returns the string of the descriptions of all commands in the list\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command_list</span>.<span class=\"ruby-identifier\">description</span>\n</pre>\n"],["description","Patterns::GeneralPractitioner","Patterns/GeneralPractitioner.html#method-i-description","()","<p>Description of the general practitioner\n"],["description","Patterns::Oncologist","Patterns/Oncologist.html#method-i-description","()","<p>Description of the oncologist\n"],["description","Patterns::Pediatrician","Patterns/Pediatrician.html#method-i-description","()","<p>Description of the pediatrician\n"],["description","Patterns::Surgeon","Patterns/Surgeon.html#method-i-description","()","<p>Description of the suregon\n"],["display","Patterns::Composite","Patterns/Composite.html#method-i-display","(depth)","<p>Displays this composite and each of its children up to their proper depth\n"],["display","Patterns::Leaf","Patterns/Leaf.html#method-i-display","(depth)","<p>Displays this leaf node with dashes indicating its current depth\n"],["error","Patterns::Logger","Patterns/Logger.html#method-i-error","(message, log_file = DEFAULT_LOG_PATH)","<p>Sets the format of our log message to error and writes data to the log file\n<p><code>message</code> - The message to log …\n\n"],["execute","Patterns::Command","Patterns/Command.html#method-i-execute","(function)","<p>Called by the child class&#39; execute function\n<p><code>function</code> - The actual command that will be executed, passed …\n\n"],["execute","Patterns::CommandList","Patterns/CommandList.html#method-i-execute","()","<p>not practical unless you want to run every command in the list; for\ndemonstration only\n"],["execute","Patterns::CopyFile","Patterns/CopyFile.html#method-i-execute","()","<p>Copies a file from a source location to a target destination\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">copy_file_cmd</span>.<span class=\"ruby-identifier\">execute</span>\n</pre>\n"],["execute","Patterns::CreateFile","Patterns/CreateFile.html#method-i-execute","()","<p>Creates a file and writes data to it; will overwrite data if the file\nalready exists. This function should …\n"],["execute","Patterns::DeleteFile","Patterns/DeleteFile.html#method-i-execute","()","<p>Deletes a file if it exists\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">delete_file_cmd</span>.<span class=\"ruby-identifier\">execute</span>\n</pre>\n"],["execute_next","Patterns::CommandList","Patterns/CommandList.html#method-i-execute_next","()","<p>public: Executes the next command in the list\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command</span> = <span class=\"ruby-constant\">Command</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;A new base command&#39;</span>)\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["get_player_position","Patterns::GameManager","Patterns/GameManager.html#method-i-get_player_position","()","<p>Returns the player&#39;s position\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">GameManager</span>.<span class=\"ruby-identifier\">get_player_position</span>\n</pre>\n"],["get_world","Patterns::GameManager","Patterns/GameManager.html#method-i-get_world","()","<p>Returns the current world state\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">GameManager</span>.<span class=\"ruby-identifier\">get_world</span>\n</pre>\n"],["get_world_size","Patterns::GameManager","Patterns/GameManager.html#method-i-get_world_size","()","<p>Returns the world size as a Vector2D Object\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">GameManager</span>.<span class=\"ruby-identifier\">get_world_size</span>\n</pre>\n"],["get_world_string","Patterns::GameManager","Patterns/GameManager.html#method-i-get_world_string","()","<p>Returns the current world formatted for printing\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">GameManager</span>.<span class=\"ruby-identifier\">get_world_string</span>\n</pre>\n"],["green","String","String.html#method-i-green","()","<p>Prints green text\n"],["has_illness?","Patterns::Patient","Patterns/Patient.html#method-i-has_illness-3F","()","<p>Returns false if patient illness is NONE or nil, true otherwise\n"],["has_prototype?","Patterns::MonsterType","Patterns/MonsterType.html#method-i-has_prototype-3F","()","<p>Returns true of false if the type has a prototype\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">if</span> <span class=\"ruby-identifier\">has_prototype?</span>\n=<span class=\"ruby-operator\">&gt;</span>  <span class=\"ruby-ivar\">@prototype_data</span> = <span class=\"ruby-identifier\">populate_type_data</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["health","Patterns::Monster","Patterns/Monster.html#method-i-health","()","<p>Delegates getting monster health to the monster_type\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">orc</span>.<span class=\"ruby-identifier\">health</span>\n</pre>\n"],["included","Patterns::AbstractInterface","Patterns/AbstractInterface.html#method-c-included","(klass)","<p>Tells the class to include and extend AbstractInterface::Methods\n"],["info","Patterns::Logger","Patterns/Logger.html#method-i-info","(message, log_file = DEFAULT_LOG_PATH)","<p>Sets the format of our log message to info and writes data to the log file\n<p><code>message</code> - The message to log …\n\n"],["init_world","Patterns::GameManager","Patterns/GameManager.html#method-i-init_world","()","<p>Initializes the game world, builds a game map, and sets the player&#39;s\nlocation\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">GameManager</span>.<span class=\"ruby-identifier\">init_world</span>\n</pre>\n"],["kick_ball","Patterns::FootballPlayer","Patterns/FootballPlayer.html#method-i-kick_ball","()","<p>Raises an exception if the function is not overridden in a child class\nReturns a string that represents …\n"],["kick_ball","Patterns::Kicker","Patterns/Kicker.html#method-i-kick_ball","()","<p>Overrides FootballPlayer kick_ball method\n"],["kick_ball","Patterns::Quarterback","Patterns/Quarterback.html#method-i-kick_ball","()","<p>Overrides FootballPlayer kick_ball method\n"],["kick_ball","Patterns::Runningback","Patterns/Runningback.html#method-i-kick_ball","()","<p>Overrides FootballPlayer kick_ball method\n"],["last_description","Patterns::CommandList","Patterns/CommandList.html#method-i-last_description","()","<p>public: Returns the description of the last command executed\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command</span> = <span class=\"ruby-constant\">Command</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;A new base ...\n</span></pre>\n"],["last_status","Patterns::CommandList","Patterns/CommandList.html#method-i-last_status","()","<p>public: Returns the status of the last command executed\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command</span> = <span class=\"ruby-constant\">Command</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;A new base command&#39;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["leaf?","Patterns::Node","Patterns/Node.html#method-i-leaf-3F","()","<p>Indicates whether or not this node has any other child nodes – will likely\nrename this and implement …\n"],["light_colorize","String","String.html#method-i-light_colorize","(color_code)","<p>Wraps the ansi standard color code 1 around a string\n"],["log_world","Patterns::GameManager","Patterns/GameManager.html#method-i-log_world","()","<p>Logs the current world state\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">GameManager</span>.<span class=\"ruby-identifier\">log_world</span>\n</pre>\n"],["new","Patterns::Admin","Patterns/Admin.html#method-c-new","(name, email)","<p>Initializes the Admin class and the Observer superclass\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">admin</span> = <span class=\"ruby-constant\">Admin</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;Chris&#39;</span>, <span class=\"ruby-string\">&#39;ccooper@sessionm.com&#39;</span>)\n</pre>\n"],["new","Patterns::ChainNode","Patterns/ChainNode.html#method-c-new","(next_node = nil)","<p>Initializes the ChainNode and sets the next node to another chain object or\nnil\n"],["new","Patterns::Command","Patterns/Command.html#method-c-new","(description)","<p>Initializes the Command Class Designed to be called by a child class in its\ninitialize method\n<p><code>description</code> …\n\n"],["new","Patterns::CommandList","Patterns/CommandList.html#method-c-new","()","<p>public: Initializes the command list\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command_list</span> = <span class=\"ruby-constant\">CommandList</span>.<span class=\"ruby-identifier\">new</span>\n</pre>\n"],["new","Patterns::Composite","Patterns/Composite.html#method-c-new","(name)","<p>Initializes the Composite class\n"],["new","Patterns::CopyFile","Patterns/CopyFile.html#method-c-new","(source, target)","<p>Initializes the CopyFile Class\n<p><code>source</code> - The source path for the file to be copied\n<p><code>target</code> - The target destination …\n"],["new","Patterns::CreateFile","Patterns/CreateFile.html#method-c-new","(path, data)","<p>Initializes the CreateFile Class\n<p><code>path</code> - The file path to write the file\n<p><code>data</code> - The data to write to the …\n"],["new","Patterns::DeleteFile","Patterns/DeleteFile.html#method-c-new","(path)","<p>Initializes the DeleteFile Class\n<p><code>path</code> - The path of the file to delete\n\n<p>Examples\n"],["new","Patterns::Doctor","Patterns/Doctor.html#method-c-new","(next_node = nil)","<p>Calls the ChainNode initialize function and sets patients seen = 0\n"],["new","Patterns::Doctors","Patterns/Doctors.html#method-c-new","()","<p>Initializes the Doctors object and all of its members, then adds those\nmembers to the list.\n"],["new","Patterns::FootballPlayer","Patterns/FootballPlayer.html#method-c-new","()","<p>initializes the FootballPlayer class\n"],["new","Patterns::Kicker","Patterns/Kicker.html#method-c-new","()","<p>Initializes the kicker class\n"],["new","Patterns::Leaf","Patterns/Leaf.html#method-c-new","(name)","<p>Initializes the Leaf class\n"],["new","Patterns::Logger","Patterns/Logger.html#method-c-new","()","<p>Initializes the Logger, the Singleton include will ensure it is only\ninitialized once, and only when …\n"],["new","Patterns::Monster","Patterns/Monster.html#method-c-new","(monster_type)","<p>Initializes the monster class\n<p><code>monster_type</code> - The type of the monster that has a\ncorresponding json file …\n\n"],["new","Patterns::MonsterPrototypes","Patterns/MonsterPrototypes.html#method-c-new","()","<p>Initializes the MonsterPrototypes class\n<p>Reads all of the json files, strips their names from the directory …\n"],["new","Patterns::MonsterType","Patterns/MonsterType.html#method-c-new","(monster_type)","<p>Initializes the monster type object. If the monster has a prototype, it\ncollects and sets the prototype …\n"],["new","Patterns::Node","Patterns/Node.html#method-c-new","(name)","<p>Initializes the Node class\n"],["new","Patterns::Observer","Patterns/Observer.html#method-c-new","()","<p>Initializes the observer class\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">observer</span> = <span class=\"ruby-constant\">Observer</span>.<span class=\"ruby-identifier\">new</span>\n</pre>\n"],["new","Patterns::Patient","Patterns/Patient.html#method-c-new","(age, illness = nil)","<p>Initializes the patient class with an age and an illness/no illness\n"],["new","Patterns::Player","Patterns/Player.html#method-c-new","(x, y)","<p>Initializes the Player object\n<p><code>x</code> - The player&#39;s x position\n<p><code>y</code> - The player&#39;s y position\n"],["new","Patterns::Quarterback","Patterns/Quarterback.html#method-c-new","()","<p>Initializes the Quarterback class\n"],["new","Patterns::Runningback","Patterns/Runningback.html#method-c-new","()","<p>Initializes the Runningback Class\n"],["new","Patterns::Subject","Patterns/Subject.html#method-c-new","()","<p>Initializes the subject class\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">subject</span> = <span class=\"ruby-constant\">Subject</span>.<span class=\"ruby-identifier\">new</span>\n</pre>\n"],["new","Patterns::User","Patterns/User.html#method-c-new","(user_name, email, password)","<p>Initializes the User class and the Subject superclass\n<p><code>user_name</code> - The user&#39;s username\n<p><code>email</code> - The user&#39;s …\n"],["new","Patterns::Vector2D","Patterns/Vector2D.html#method-c-new","(x, y)","<p>Initializes the Vector2D object\n<p><code>x</code> - The x position of the object\n<p><code>y</code> - The y position of the object\n"],["next_description","Patterns::CommandList","Patterns/CommandList.html#method-i-next_description","()","<p>public: Returns the description of the next command in the list\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command</span> = <span class=\"ruby-constant\">Command</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;A new ...\n</span></pre>\n"],["next_status","Patterns::CommandList","Patterns/CommandList.html#method-i-next_status","()","<p>public: Returns the status of the next command in the list\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command</span> = <span class=\"ruby-constant\">Command</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;A new base ...\n</span></pre>\n"],["notify","Patterns::Subject","Patterns/Subject.html#method-i-notify","(notification, event)","<p>Notifies the observer of some change\n<p><code>notification</code> - The notification to send to the observers\n<p><code>event</code> -  …\n"],["notify","Patterns::User","Patterns/User.html#method-i-notify","(notification, event)","<p>Notifies the superclass of an event, which in turn notifies all of its\nobservers\n<p><code>notification</code> - The notification …\n"],["on_notify","Patterns::Observer","Patterns/Observer.html#method-i-on_notify","(notification, event)","<p>Is called when this function is invoked by a subject\n<p>Note: in a real implementation, the event would likely …\n"],["populate_prototype_data","Patterns::MonsterType","Patterns/MonsterType.html#method-i-populate_prototype_data","()","<p>Populates prototype data\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">populate_prototype_data</span>\n</pre>\n"],["populate_type_data","Patterns::MonsterType","Patterns/MonsterType.html#method-i-populate_type_data","(monster_type)","<p>Populates type data based on monster name\n<p><code>monster_type</code> - The type of the monster that has a\ncorresponding …\n\n"],["position","Patterns::FootballPlayer","Patterns/FootballPlayer.html#method-i-position","()","<p>Raises an exception if the function is not overridden in a child class\nReturns a string that represents …\n"],["position","Patterns::Kicker","Patterns/Kicker.html#method-i-position","()","<p>Overrides FootballPlayer position method\n"],["position","Patterns::Quarterback","Patterns/Quarterback.html#method-i-position","()","<p>Overrides FootballPlayer position method\n"],["position","Patterns::Runningback","Patterns/Runningback.html#method-i-position","()","<p>Overrides FootballPlayer position method\n"],["print_world","Patterns::GameManager","Patterns/GameManager.html#method-i-print_world","()","<p>Prints the game world\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">GameManager</span>.<span class=\"ruby-identifier\">print_world</span>\n</pre>\n"],["process","Patterns::ChainNode","Patterns/ChainNode.html#method-i-process","(argument)",""],["process","Patterns::Doctor","Patterns/Doctor.html#method-i-process","(argument)",""],["prototype_name","Patterns::Monster","Patterns/Monster.html#method-i-prototype_name","()","<p>Gets this monster&#39;s prototype name if it has one and the string\n&#39;none&#39; if it does not\n<p>Examples …\n"],["pthreads","PThreads","PThreads.html#method-i-pthreads","()",""],["range","Patterns::Monster","Patterns/Monster.html#method-i-range","()","<p>Delegates getting monster range to the monster_type\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">orc</span>.<span class=\"ruby-identifier\">range</span>\n</pre>\n"],["read_file","CIO","CIO.html#method-i-read_file","(p1)","<p>The ruby shell method that gets called - The “VALUE filename” is coerced\ninto a string value, …\n"],["red","String","String.html#method-i-red","()","<p>Prints red text\n"],["remove","Patterns::Leaf","Patterns/Leaf.html#method-i-remove","(component)","<p>Raises an error, since a leaf can not remove what it doesn&#39;t have\n"],["remove","Patterns::Node","Patterns/Node.html#method-i-remove","(node)","<p>Removes the child node from this node&#39;s children\n"],["remove_observer","Patterns::Subject","Patterns/Subject.html#method-i-remove_observer","(observer)","<p>Removes an observer from the list of observers\n<p><code>observer</code> - The observer to remove from the list\n\n<p>Examples …\n"],["resistances","Patterns::Monster","Patterns/Monster.html#method-i-resistances","()","<p>Delegates getting monster resistances to the monster_type\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">orc</span>.<span class=\"ruby-identifier\">resistances</span>\n</pre>\n"],["run_ball","Patterns::FootballPlayer","Patterns/FootballPlayer.html#method-i-run_ball","()","<p>Raises an exception if the function is not overridden in a child class\nReturns a string that represents …\n"],["run_ball","Patterns::Kicker","Patterns/Kicker.html#method-i-run_ball","()","<p>Overrides FootballPlayer run_ball method\n"],["run_ball","Patterns::Quarterback","Patterns/Quarterback.html#method-i-run_ball","()","<p>Overrides FootballPlayer run_ball method\n"],["run_ball","Patterns::Runningback","Patterns/Runningback.html#method-i-run_ball","()","<p>Overrides FootballPlayer run_ball method\n"],["salary","Patterns::FootballPlayer","Patterns/FootballPlayer.html#method-i-salary","()","<p>Raises an exception if the function is not overridden in a child class\nReturns a string representing …\n"],["salary","Patterns::Kicker","Patterns/Kicker.html#method-i-salary","()","<p>Overrides FootballPlayer salary method\n"],["salary","Patterns::Quarterback","Patterns/Quarterback.html#method-i-salary","()","<p>Overrides FootballPlayer salary method\n"],["salary","Patterns::Runningback","Patterns/Runningback.html#method-i-salary","()","<p>Overrides FootballPlayer salary method\n"],["saw_patient?","Patterns::Doctor","Patterns/Doctor.html#method-i-saw_patient-3F","()","<p>Returns true or false if the doctor has seen a patient\n"],["see_patient","Patterns::Doctor","Patterns/Doctor.html#method-i-see_patient","(patient)","<p>Sets saw patient = true and adds 1 to patients seen\n"],["see_patient","Patterns::Doctors","Patterns/Doctors.html#method-i-see_patient","(patient)","<p>Starts the chain of responsibility by having the pediatrician see the first\npatient\n"],["see_patient","Patterns::GeneralPractitioner","Patterns/GeneralPractitioner.html#method-i-see_patient","(patient)","<p>Sees a patient and either cures the patient or sends the patient up the\nchain\n"],["see_patient","Patterns::Oncologist","Patterns/Oncologist.html#method-i-see_patient","(patient)","<p>Sees a patient, if they have cancer the patient is cured, otherwise they\nare sent up the chain\n"],["see_patient","Patterns::Pediatrician","Patterns/Pediatrician.html#method-i-see_patient","(patient)","<p>The pediatrician sees a patient, cures the patient if they are a child and\nhave a sore throat, passes …\n"],["see_patient","Patterns::Surgeon","Patterns/Surgeon.html#method-i-see_patient","(patient)","<p>Sees a patient, cures them if they have internal bleeding, sends them up\nthe chain otherwise\n"],["send_up_chain","Patterns::ChainNode","Patterns/ChainNode.html#method-i-send_up_chain","(argument)","<p>Delegates the responsibility to the next node in the chain\n"],["set_illness","Patterns::Patient","Patterns/Patient.html#method-i-set_illness","(illness)","<p>Sets the patient&#39;s illness\n"],["status","Patterns::CommandList","Patterns/CommandList.html#method-i-status","()","<p>public: Returns the string of the status of all commands in the list\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command_list</span>.<span class=\"ruby-identifier\">status</span>\n</pre>\n"],["throw_ball","Patterns::FootballPlayer","Patterns/FootballPlayer.html#method-i-throw_ball","()","<p>Raises an exception if the function is not overridden in a child class\nReturns a string that represents …\n"],["throw_ball","Patterns::Kicker","Patterns/Kicker.html#method-i-throw_ball","()","<p>Overrides FootballPlayer throw_ball method\n"],["throw_ball","Patterns::Quarterback","Patterns/Quarterback.html#method-i-throw_ball","()","<p>Overrides FootballPlayer throw_ball method\n"],["to_h","Patterns","Patterns.html#method-i-to_h","()","<p>Converts the MonsterType to a Hash object\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">monster_type_hash</span> = <span class=\"ruby-identifier\">monster_type</span>.<span class=\"ruby-identifier\">to_h</span>\n</pre>\n"],["undo","Patterns::Command","Patterns/Command.html#method-i-undo","(function)","<p>Called by the child class&#39; undo function.\n<p><code>function</code> - The command that will perform the undo operation …\n\n"],["undo","Patterns::CommandList","Patterns/CommandList.html#method-i-undo","()","<p>also only practical if you want to reverse every command in the list\n"],["undo","Patterns::CopyFile","Patterns/CopyFile.html#method-i-undo","()","<p>Undoes a copy operation\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">copy_file_cmd</span>.<span class=\"ruby-identifier\">undo</span>\n</pre>\n"],["undo","Patterns::CreateFile","Patterns/CreateFile.html#method-i-undo","()","<p>Undoes file creation; to be more useful, this should probably only remove\ndata if it was appended, and …\n"],["undo","Patterns::DeleteFile","Patterns/DeleteFile.html#method-i-undo","()","<p>Replaces a file that was deleted\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">delete_file_cmd</span>.<span class=\"ruby-identifier\">undo</span>\n</pre>\n"],["undo_last","Patterns::CommandList","Patterns/CommandList.html#method-i-undo_last","()","<p>public: Undoes the last command executed\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command</span> = <span class=\"ruby-constant\">Command</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&#39;A new base command&#39;</span>)\n=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">command_list</span>.<span class=\"ruby-identifier\">add_command</span>(<span class=\"ruby-identifier\">command</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["weaknesses","Patterns::Monster","Patterns/Monster.html#method-i-weaknesses","()","<p>Delegates getting monster weaknesses to the monster_type\n<p>Examples\n\n<pre class=\"ruby\">=<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">orc</span>.<span class=\"ruby-identifier\">weaknesses</span>\n</pre>\n"],["write_new_file","CIO","CIO.html#method-i-write_new_file","(p1, p2)",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in Patterns.gemspec gemspec\n<p>gem &#39;rspec&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  Patterns (0.0.5)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE_txt.html","","<p>Copyright © 2014 Chris Cooper\n<p>MIT License\n<p>Permission is hereby granted, free of charge, to any person …\n"],["Patterns.gemspec","","Patterns_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"],["README","","README_md.html","","<p>Patterns\n<p>This project began because I wanted to help some of the people at work\nlearn Ruby, and I decided …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks”\n<p>gem &#39;rdoc&#39; require &#39;rdoc/task&#39; RDoc::Task.new do …\n"],["game_log.log","","app/models/singleton/log/game_log_log.html","","<p>2014-12-24 20:44:43 -0500 | INFO: Player position x: 12, Player position y:\n14 2014-12-24 20:44:43 -0500 …\n"],["dragon.json","","app/models/type_object/monster_types/dragon_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;dragon&quot;,\n&quot;health&quot;: 100,\n&quot;attack&quot; : 30,\n&quot;range&quot; : 20,\n&quot;resists&quot;: [\n  &quot;cold&quot;,\n  &quot;poison&quot;,\n  &quot;fire&quot; ...</pre>\n"],["high_dragon.json","","app/models/type_object/monster_types/high_dragon_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;high_dragon&quot;,\n&quot;health&quot;: 150,\n&quot;attack&quot; : 50,\n&quot;prototype&quot; : true,\n&quot;prototype_name&quot; : &quot;dragon&quot;</pre>\n"],["orc.json","","app/models/type_object/monster_types/orc_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;orc&quot;,\n&quot;health&quot;: 30,\n&quot;attack&quot; : 5,\n&quot;range&quot; : 2,\n&quot;resists&quot;: [\n  &quot;cold&quot;,\n  &quot;poison&quot;\n],\n&quot;weaknesses&quot;: ...</pre>\n"],["orc_wizard.json","","app/models/type_object/monster_types/orc_wizard_json.html","","<p>{ “name”: “orc_wizard”, “attack” : 7, “attack_range” : 10, “prototype” …\n"],["Object.html","","html/classes/Object_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Object - ...</pre>\n"],["Patterns.html","","html/classes/Patterns_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns ...</pre>\n"],["Admin.html","","html/classes/Patterns/Admin_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Admin ...</pre>\n"],["Command.html","","html/classes/Patterns/Command_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Command ...</pre>\n"],["CommandList.html","","html/classes/Patterns/CommandList_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::CommandList ...</pre>\n"],["CopyFile.html","","html/classes/Patterns/CopyFile_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::CopyFile ...</pre>\n"],["CreateFile.html","","html/classes/Patterns/CreateFile_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::CreateFile ...</pre>\n"],["DeleteFile.html","","html/classes/Patterns/DeleteFile_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::DeleteFile ...</pre>\n"],["GameManager.html","","html/classes/Patterns/GameManager_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::GameManager ...</pre>\n"],["Logger.html","","html/classes/Patterns/Logger_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Logger ...</pre>\n"],["Observer.html","","html/classes/Patterns/Observer_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Observer ...</pre>\n"],["Player.html","","html/classes/Patterns/Player_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Player ...</pre>\n"],["Singleton.html","","html/classes/Patterns/Singleton_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Singleton ...</pre>\n"],["Subject.html","","html/classes/Patterns/Subject_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Subject ...</pre>\n"],["User.html","","html/classes/Patterns/User_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::User ...</pre>\n"],["Vector2D.html","","html/classes/Patterns/Vector2D_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns::Vector2D ...</pre>\n"],["String.html","","html/classes/String_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;String - ...</pre>\n"],["index.html","","html/classes/index_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt; - RDoc ...</pre>\n"],["application.css","","html/css/application_css.html","","<p>#main {\n\n<pre>padding: 0 0 50px 0; }\n@media (min-width: 980px) {\n  #main {\n    padding: 80px 0; } }</pre>\n<p>.nav li a …\n"],["bootstrap.min.css","","html/css/bootstrap_min_css.html","","\n<pre>!\n Bootstrap v2.2.2\n\n Copyright 2012 Twitter, Inc\n Licensed under the Apache License v2.0\n http://www.apache.org/licenses/LICENSE-2.0 ...</pre>\n"],["coderay.css","","html/css/coderay_css.html","","<p>.CodeRay pre {\n\n<pre>margin: 0px;\nfont-size: 11px;\nline-height: 15px;</pre>\n<p>}\n"],["Gemfile.html","","html/files/Gemfile_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Gemfile ...</pre>\n"],["Gemfile_lock.html","","html/files/Gemfile_lock_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Gemfile.lock ...</pre>\n"],["LICENSE_txt.html","","html/files/LICENSE_txt_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;LICENSE.txt ...</pre>\n"],["Patterns_gemspec.html","","html/files/Patterns_gemspec_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns.gemspec ...</pre>\n"],["README_md.html","","html/files/README_md_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;README.md ...</pre>\n"],["Rakefile.html","","html/files/Rakefile_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Rakefile ...</pre>\n"],["command_list_rb.html","","html/files/app/models/command/command_list_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;command_list.rb ...</pre>\n"],["command_rb.html","","html/files/app/models/command/command_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;command.rb ...</pre>\n"],["copy_file_rb.html","","html/files/app/models/command/copy_file_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;copy_file.rb ...</pre>\n"],["create_file_rb.html","","html/files/app/models/command/create_file_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;create_file.rb ...</pre>\n"],["delete_file_rb.html","","html/files/app/models/command/delete_file_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;delete_file.rb ...</pre>\n"],["admin_rb.html","","html/files/app/models/observer/admin_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;admin.rb ...</pre>\n"],["observer_rb.html","","html/files/app/models/observer/observer_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;observer.rb ...</pre>\n"],["subject_rb.html","","html/files/app/models/observer/subject_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;subject.rb ...</pre>\n"],["user_rb.html","","html/files/app/models/observer/user_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;user.rb ...</pre>\n"],["game_manager_rb.html","","html/files/app/models/singleton/game_manager_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;game_manager.rb ...</pre>\n"],["game_log_log.html","","html/files/app/models/singleton/log/game_log_log_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;game_log.log ...</pre>\n"],["logger_rb.html","","html/files/app/models/singleton/logger_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;logger.rb ...</pre>\n"],["player_rb.html","","html/files/app/models/singleton/player_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;player.rb ...</pre>\n"],["singleton_rb.html","","html/files/app/models/singleton/singleton_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;singleton.rb ...</pre>\n"],["index.html","","html/files/index_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt; - RDoc ...</pre>\n"],["version_rb.html","","html/files/lib/Patterns/version_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;version.rb ...</pre>\n"],["Patterns_rb.html","","html/files/lib/Patterns_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;Patterns.rb ...</pre>\n"],["run_tests_rb.html","","html/files/script/run_tests_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;run_tests.rb ...</pre>\n"],["command_spec_rb.html","","html/files/test/command_spec_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;command_spec.rb ...</pre>\n"],["observer_spec_rb.html","","html/files/test/observer_spec_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;observer_spec.rb ...</pre>\n"],["singleton_spec_rb.html","","html/files/test/singleton_spec_rb_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt;singleton_spec.rb ...</pre>\n"],["application.js","","html/js/application_js.html","","<p>(function() {\n\n<pre>(function(window, $) {\n  return $(function() {\n    var base, input, resultList, search, ...</pre>\n"],["bootstrap.min.js","","html/js/bootstrap_min_js.html","","\n<pre>Bootstrap.js by @fat &amp; @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, ...</pre>\n"],["index.js","","html/js/index_js.html","","<p>var searchIndex =\n[{“method”:“new”,“module”:“Patterns::Admin”,“link”:“classes/Patterns/Admin.html#method-c-new”},{“method”:“new”,“module”:“Patterns::Command”,“link”:“classes/Patterns/Command.html#method-c-new”},{“method”:“new”,“module”:“Patterns::DeleteFile”,“link”:“classes/Patterns/DeleteFile.html#method-c-new”},{“method”:“new”,“module”:“Patterns::Logger”,“link”:“classes/Patterns/Logger.html#method-c-new”},{“method”:“new”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-c-new”},{“method”:“new”,“module”:“Patterns::CreateFile”,“link”:“classes/Patterns/CreateFile.html#method-c-new”},{“method”:“new”,“module”:“Patterns::CopyFile”,“link”:“classes/Patterns/CopyFile.html#method-c-new”},{“method”:“new”,“module”:“Patterns::Observer”,“link”:“classes/Patterns/Observer.html#method-c-new”},{“method”:“new”,“module”:“Patterns::Vector2D”,“link”:“classes/Patterns/Vector2D.html#method-c-new”},{“method”:“new”,“module”:“Patterns::Subject”,“link”:“classes/Patterns/Subject.html#method-c-new”},{“method”:“new”,“module”:“Patterns::User”,“link”:“classes/Patterns/User.html#method-c-new”},{“method”:“new”,“module”:“Patterns::Player”,“link”:“classes/Patterns/Player.html#method-c-new”},{“method”:“add_command”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-add_command”},{“method”:“add_commands”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-add_commands”},{“method”:“add_observer”,“module”:“Patterns::Subject”,“link”:“classes/Patterns/Subject.html#method-i-add_observer”},{“method”:“change_password”,“module”:“Patterns::User”,“link”:“classes/Patterns/User.html#method-i-change_password”},{“method”:“colorize”,“module”:“String”,“link”:“classes/String.html#method-i-colorize”},{“method”:“description”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-description”},{“method”:“error”,“module”:“Patterns::Logger”,“link”:“classes/Patterns/Logger.html#method-i-error”},{“method”:“execute”,“module”:“Patterns::DeleteFile”,“link”:“classes/Patterns/DeleteFile.html#method-i-execute”},{“method”:“execute”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-execute”},{“method”:“execute”,“module”:“Patterns::Command”,“link”:“classes/Patterns/Command.html#method-i-execute”},{“method”:“execute”,“module”:“Patterns::CopyFile”,“link”:“classes/Patterns/CopyFile.html#method-i-execute”},{“method”:“execute”,“module”:“Patterns::CreateFile”,“link”:“classes/Patterns/CreateFile.html#method-i-execute”},{“method”:“execute_next”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-execute_next”},{“method”:“get_player_position”,“module”:“Patterns::GameManager”,“link”:“classes/Patterns/GameManager.html#method-i-get_player_position”},{“method”:“get_world”,“module”:“Patterns::GameManager”,“link”:“classes/Patterns/GameManager.html#method-i-get_world”},{“method”:“get_world_size”,“module”:“Patterns::GameManager”,“link”:“classes/Patterns/GameManager.html#method-i-get_world_size”},{“method”:“green”,“module”:“String”,“link”:“classes/String.html#method-i-green”},{“method”:“info”,“module”:“Patterns::Logger”,“link”:“classes/Patterns/Logger.html#method-i-info”},{“method”:“init_world”,“module”:“Patterns::GameManager”,“link”:“classes/Patterns/GameManager.html#method-i-init_world”},{“method”:“last_description”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-last_description”},{“method”:“last_status”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-last_status”},{“method”:“light_colorize”,“module”:“String”,“link”:“classes/String.html#method-i-light_colorize”},{“method”:“log_world”,“module”:“Patterns::GameManager”,“link”:“classes/Patterns/GameManager.html#method-i-log_world”},{“method”:“next_description”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-next_description”},{“method”:“next_status”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-next_status”},{“method”:“notify”,“module”:“Patterns::User”,“link”:“classes/Patterns/User.html#method-i-notify”},{“method”:“notify”,“module”:“Patterns::Subject”,“link”:“classes/Patterns/Subject.html#method-i-notify”},{“method”:“on_notify”,“module”:“Patterns::Observer”,“link”:“classes/Patterns/Observer.html#method-i-on_notify”},{“method”:“print_world”,“module”:“Patterns::GameManager”,“link”:“classes/Patterns/GameManager.html#method-i-print_world”},{“method”:“red”,“module”:“String”,“link”:“classes/String.html#method-i-red”},{“method”:“remove_observer”,“module”:“Patterns::Subject”,“link”:“classes/Patterns/Subject.html#method-i-remove_observer”},{“method”:“status”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-status”},{“method”:“undo”,“module”:“Patterns::CreateFile”,“link”:“classes/Patterns/CreateFile.html#method-i-undo”},{“method”:“undo”,“module”:“Patterns::DeleteFile”,“link”:“classes/Patterns/DeleteFile.html#method-i-undo”},{“method”:“undo”,“module”:“Patterns::Command”,“link”:“classes/Patterns/Command.html#method-i-undo”},{“method”:“undo”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-undo”},{“method”:“undo”,“module”:“Patterns::CopyFile”,“link”:“classes/Patterns/CopyFile.html#method-i-undo”},{“method”:“undo_last”,“module”:“Patterns::CommandList”,“link”:“classes/Patterns/CommandList.html#method-i-undo_last”},{“method”:“description”,“module”:“Patterns::Command”,“link”:“classes/Patterns/Command.html#attribute-i-description”},{“method”:“last_event”,“module”:“Patterns::Observer”,“link”:“classes/Patterns/Observer.html#attribute-i-last_event”},{“method”:“last_notification”,“module”:“Patterns::Observer”,“link”:“classes/Patterns/Observer.html#attribute-i-last_notification”},{“method”:“observers”,“module”:“Patterns::Subject”,“link”:“classes/Patterns/Subject.html#attribute-i-observers”},{“method”:“output”,“module”:“Patterns::Logger”,“link”:“classes/Patterns/Logger.html#attribute-i-output”},{“method”:“position”,“module”:“Patterns::Player”,“link”:“classes/Patterns/Player.html#attribute-i-position”},{“method”:“status”,“module”:“Patterns::Command”,“link”:“classes/Patterns/Command.html#attribute-i-status”},{“method”:“x”,“module”:“Patterns::Vector2D”,“link”:“classes/Patterns/Vector2D.html#attribute-i-x”},{“method”:“y”,“module”:“Patterns::Vector2D”,“link”:“classes/Patterns/Vector2D.html#attribute-i-y”}]\n…\n"],["jquery.js","","html/js/jquery_js.html","","\n<pre>! jQuery v1.9.0 | (c) 2005, 2012 jQuery Foundation, Inc. | jquery.org/license   (function(e,t){&quot;use strict&quot;;function ...</pre>\n"],["index.html","","html/method/index_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=&#39;en&#39;&gt;\n\n<pre>&lt;head&gt;\n  &lt;meta charset=&#39;utf-8&#39;&gt;\n  &lt;title&gt; - RDoc ...</pre>\n"],["Makefile","","lib/extensions/io/Makefile.html","","<p>SHELL = /bin/sh\n<p># V=0 quiet, V=1 verbose.  other values don&#39;t work. V = 0 Q1 = $(V:1=)\nQ = $(Q1:0=@) …\n"],["Makefile","","lib/extensions/pthreads/Makefile.html","","<p>SHELL = /bin/sh\n<p># V=0 quiet, V=1 verbose.  other values don&#39;t work. V = 0 Q1 = $(V:1=)\nQ = $(Q1:0=@) …\n"],["bridge_spec.log","","test/logs/bridge_spec_log.html","","<p>2014-12-27 06:02:46 -0500 | INFO:  BridgeTests\n\n<pre>AbstractInterfaceTesting</pre>\n<p>\u001b    Throws an InterfaceNotImplemented …\n"],["chain_of_responsibility_spec.log","","test/logs/chain_of_responsibility_spec_log.html","","<p>2014-12-29 02:36:19 -0500 | INFO:\n/Users/Chris/src/Gems/DesignPatterns/test/chain_of_responsibility_spec.rb …\n"],["command_spec.log","","test/logs/command_spec_log.html","","<p>2014-12-24 20:44:43 -0500 | INFO:  CommandTests \u001b  Creates a file, verifies\nit exists, and then deletes …\n"],["composite_spec.log","","test/logs/composite_spec_log.html","","<p>2014-12-24 21:55:37 -0500 | INFO:  CompositeTests \u001b  Can instantiate a root\ncomposite, leaf nodes for …\n"],["observer_spec.log","","test/logs/observer_spec_log.html","","<p>2014-12-24 20:44:43 -0500 | INFO:  ObserverTests \u001b  Able to add an observer\nand notify it of an event\u001b …\n"],["singleton_spec.log","","test/logs/singleton_spec_log.html","","<p>2014-12-24 20:44:43 -0500 | INFO:  SingletonTests \u001b  Verifies that a game\nmanager can not be instantiated\u001b …\n"],["type_object_spec.log","","test/logs/type_object_spec_log.html","","<p>2014-12-24 20:45:10 -0500 | INFO:  TypeObjectTests\n\n<pre>TypeObject assignment</pre>\n<p>\u001b    Loads prototype and base …\n"]]}}